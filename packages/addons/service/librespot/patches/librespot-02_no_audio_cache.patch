diff -Naur librespot/src/audio_file.rs librespot.nocache/src/audio_file.rs
--- librespot/src/audio_file.rs	2017-06-14 00:14:21.000000000 +0200
+++ librespot.nocache/src/audio_file.rs	2017-06-20 00:35:14.060020000 +0200
@@ -3,7 +3,7 @@
 use futures::Stream;
 use futures::sync::{oneshot, mpsc};
 use futures::{Poll, Async, Future};
-use futures::future::{self, FutureResult};
+use futures::future::FutureResult;
 use std::cmp::min;
 use std::fs;
 use std::io::{self, Read, Write, Seek, SeekFrom};
@@ -129,15 +129,9 @@
 
 impl AudioFileManager {
     pub fn open(&self, file_id: FileId) -> AudioFileOpen {
-        let cache = self.session().cache().cloned();
-
-        if let Some(file) = cache.as_ref().and_then(|cache| cache.file(file_id)) {
-            debug!("File {} already in cache", file_id);
-            return AudioFileOpen::Cached(future::ok(file));
-        }
-
         debug!("Downloading file {}", file_id);
 
+        #[allow(unused_variables)]
         let (complete_tx, complete_rx) = oneshot::channel();
         let (headers, data) = request_chunk(&self.session(), file_id, 0).split();
 
@@ -151,18 +145,6 @@
             complete_tx: Some(complete_tx),
         };
 
-        let session = self.session();
-        self.session().spawn(move |_| {
-            complete_rx.map(move |mut file| {
-                if let Some(cache) = session.cache() {
-                    cache.save_file(file_id, &mut file);
-                    debug!("File {} complete, saving to cache", file_id);
-                } else {
-                    debug!("File {} complete", file_id);
-                }
-            }).or_else(|oneshot::Canceled| Ok(()))
-        });
-
         AudioFileOpen::Streaming(open)
     }
 }
